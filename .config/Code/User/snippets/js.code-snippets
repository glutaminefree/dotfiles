{
  "console log": {
    "scope": ["js", "vue"],
    "prefix": "log",
    "body": [
      "console.log($1);"
    ],
    "description": "console log function"
  },
  "vue log": {
    "scope": ["js", "vue"],
    "prefix": "vuelog",
    "body": [
      "console.log(JSON.stringify($1, null, 2));"
    ],
    "description": "console log for vue data"
  },
  "export default": {
    "scope": ["js", "vue"],
    "prefix": "ed",
    "body": [
      "export default {",
      "\t$1",
      "};"
    ],
  },
  "export default function": {
    "scope": ["js", "vue"],
    "prefix": "edf",
    "body": [
      "export default ($1) => {",
      "\t$2",
      "};"
    ],
  },
  "eslint disable": {
    "scope": ["js", "vue"],
    "prefix": "esd",
    "body": [
      "/* eslint-disable */"
    ],
  },
  "eslint enable": {
    "scope": ["js", "vue"],
    "prefix": "ese",
    "body": [
      "/* eslint-enable */"
    ],
  },
  "eslint disable next line": {
    "scope": ["js", "vue"],
    "prefix": "esdl",
    "body": [
      "/* eslint-disable-next-line */"
    ],
  },
  "hasOwnProperty": {
    "scope": ["js", "vue"],
    "prefix": "hop",
    "body": [
      "const hop = Object.prototype.hasOwnProperty;"
    ],
  },
  "returnTrue": {
    "scope": ["js", "vue"],
    "prefix": "rt",
    "body": [
      "return true;",
    ],
  },
  "returnFalse": {
    "scope": ["js", "vue"],
    "prefix": "rf",
    "body": [
      "return false;",
    ],
  },
  "fastTryCatch": {
    "scope": ["js", "vue"],
    "prefix": "ftc",
    "body": [
      "try {",
      "\tconst result = await this.\\$api.${1:API}.${2:METHOD}();",
      "\tif (!Array.isArray(result.data)) {",
      "\t\tthrow new TypeError('wrong response');",
      "\t}",
      "\t$0this.${3:PROP} = result.data;",
      "} catch (e) {",
      "\tthis.\\$saveError('Не удалось ${4:ERROR_TEXT}', e);",
      "}",
    ],
  },
  "notify": {
    "scope": ["js", "vue"],
    "prefix": "ntf",
    "body": [
      "this.\\$notify({",
      "\tstatus: 'error',",
      "\ttext: ${1:ERROR_TEXT},",
      "});",
    ],
  }
}
