{
  "vue log": {
    "scope": ["js", "vue"],
    "prefix": "vuelog",
    "body": [
      "console.log(JSON.stringify($1, null, 2));"
    ],
    "description": "console log for vue data"
  },
  "vue base": {
    "scope": ["js", "vue"],
    "prefix": "vuebase",
    "body": [
      "<template lang=\"pug\">",
      "\t.$1",
      "</template>",
      "",
      "<script>",
      "export default {",
      "\tname: '$2',",
      "};",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      "</style>"
    ],
    "description": "vue component base"
  },
  "vue data": {
    "scope": ["js", "vue"],
    "prefix": "vuedata",
    "body": [
      "data: () => ({",
      "\t$1: $2,",
      "}),"
    ],
    "description": "vue data func"
  },
  "eslint disable": {
    "scope": ["js", "vue"],
    "prefix": "esd",
    "body": [
      "/* eslint-disable */"
    ],
  },
  "eslint enable": {
    "scope": ["js", "vue"],
    "prefix": "ese",
    "body": [
      "/* eslint-enable */"
    ],
  },
  "eslint disable next line": {
    "scope": ["js", "vue"],
    "prefix": "esdl",
    "body": [
      "/* eslint-disable-next-line */"
    ],
  },
  "hasOwnProperty": {
    "scope": ["js", "vue"],
    "prefix": "hop",
    "body": [
      "const hop = Object.prototype.hasOwnProperty;"
    ],
  },
  "fastTryCatch": {
    "scope": ["js", "vue"],
    "prefix": "ftc",
    "body": [
      "try {",
      "\tconst result = await this.\\$api.${1:API}.${2:METHOD}();",
      "\tif (!Array.isArray(result.data)) {",
      "\t\tthrow new TypeError('wrong response');",
      "\t}",
      "\t$0this.${3:PROP} = result.data;",
      "} catch (e) {",
      "\tthis.\\$saveError('Не удалось ${4:ERROR_TEXT}', e);",
      "}",
    ],
  },
  "notify": {
    "scope": ["js", "vue"],
    "prefix": "ntf",
    "body": [
      "this.\\$notify({",
      "\tstatus: 'error',",
      "\ttext: ${1:ERROR_TEXT},",
      "});",
    ],
  },
}
